version: '3.1'
services:
 web:
  build: ./nginx
  restart: always
  volumes:
   - ./templates:/etc/nginx/templates
  ports:
   - "8081:80"
  environment:
   - NGINX_HOST=foobar.com
   - NGINX_PORT=80
 db:
    build: ./db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example

 adminer:
    build: ./adminer
    restart: always
    ports:
      - 8082:8080
networks:
  monitor-net:
    driver: bridge

services:

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      - monitor-net
    
  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER="admin"
      - GF_SECURITY_ADMIN_PASSWORD="admin"
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: always
    expose:
      - 3000
    ports:
      - 3000:3000
    networks:
      - monitor-net

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    hostname: node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      - monitor-net
